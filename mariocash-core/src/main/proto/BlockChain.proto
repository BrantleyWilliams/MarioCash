syntax = "proto3";

option java_package = "dev.zhihexireng.proto";
option java_outer_classname = "BlockChainProto";

service BlockChain {
    // Client to server messaging RPC
    rpc syncBlock(SyncLimit) returns (BlockList) {
    }
    rpc syncTransaction(Empty) returns (TransactionList) {
    }

    // Bidirectional streaming RPC
    rpc broadcastBlock (stream Block) returns (stream Block) {
    }
    rpc broadcastTransaction (stream Transaction) returns (stream Transaction) {
    }
}

message Empty {
}

message SyncLimit {
    uint64 offset = 1;
    uint64 limit = 2;
}

message BlockList {
    repeated Block blocks = 1;
}

message TransactionList {
    repeated Transaction transactions = 1;
}

message Block {
    BlockHeader header = 1;
    BlockBody data = 2;
}

message BlockHeader {
    bytes type = 1;
    bytes version = 2; // Version indicates message protocol version
    uint64 index = 3; // The index in the blockchain
    uint64 timestamp = 4; // google.protobuf.Timestamp timestamp ?
    bytes prevBlockHash = 5; // The hash of the previous block header
    bytes author = 6; // The name of the miner
    bytes merkleRoot = 7; // The hash of the BlockBody, by MerkleTree
    uint64 dataSize = 8;
    bytes signature = 9;
}

message BlockBody {
    repeated Transaction trasactions = 1; // A collection of txns
}

message Transaction {
    TransactionHeader header = 1;
    string data = 2;
}

message TransactionHeader {
    bytes type = 1;
    bytes version = 2;
    bytes dataHash = 3;
    uint64 timestamp = 4;
    uint64 dataSize = 5;
    bytes signature = 6;
}
