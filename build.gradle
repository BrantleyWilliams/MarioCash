buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
    }
}

apply plugin: 'java'
apply plugin: 'idea'

group = 'dev.zhihexireng'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

ext {
    grpcVersion = '1.12.0'
    leveldbVersion = '0.10'
    commonsCodec = '1.10'
    scastleVersion = '1.58.0.0'
}

allprojects {
    apply plugin: 'com.github.kt3k.coveralls'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile('org.springframework.boot:spring-boot-starter')
        compile('org.springframework.boot:spring-boot-starter-cache')
        compile "org.iq80.leveldb:leveldb:${leveldbVersion}"

        runtime('org.springframework.boot:spring-boot-devtools')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }
}

project(':mariocash-core') {
    apply plugin: 'com.google.protobuf'

    dependencies {
        compile "io.grpc:grpc-protobuf:${grpcVersion}"
        compile "io.grpc:grpc-stub:${grpcVersion}"
        compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
        compile "commons-codec:commons-codec:${commonsCodec}"
        compile group: 'org.ehcache', name: 'ehcache', version: '3.5.2'
        testCompile "io.grpc:grpc-testing:${grpcVersion}"
        compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
        compile "com.madgag.spongycastle:core:${scastleVersion}" // for SHA3 and SECP256K1
        compile "com.madgag.spongycastle:prov:${scastleVersion}" // for SHA3 and SECP256K1
        compile group: 'commons-io', name: 'commons-io', version: '2.4'
        compile group: 'org.iq80.leveldb', name: 'leveldb', version: '0.10'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.5'
    }

    jar {
        enabled = true
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:3.5.1-1"
        }
        plugins {
            grpc {
                artifact = 'io.grpc:protoc-gen-grpc-java:1.11.0'
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}

project(':mariocash-node') {
    dependencies {
        compile project(':mariocash-core')
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
    }
}

task jacocoRootReport(type: JacocoReport) {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn = subprojects.test
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                exclude: ['io/mariocash/proto/**']
            )
        })
    }

    reports {
        html.enabled = true // For Developer
        xml.enabled = true // For coveralls
    }
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}
